# 핵심 셸 기능 구현 계획

## 1. 별칭 (Alias) 기능 (`alias`, `unalias`)

- [ ] **`ShellCore` 수정**: `src/shell/core/mod.rs`의 `ShellCore` 구조체에 별칭을 저장할 `HashMap<String, String>` 필드 추가.
- [ ] **내장 명령어 구현**: `src/shell/core/builtins/alias.rs` 파일을 생성하여 `alias`와 `unalias` 명령어 로직 구현.
    - `alias name="command"` 형식으로 별칭 설정
    - `unalias name`으로 별칭 해제
    - `alias`만 입력 시 모든 별칭 목록 출력
- [ ] **내장 명령어 등록**: `src/shell/core/builtins/mod.rs`에 `alias` 모듈 등록.
- [ ] **실행 로직 수정**: `src/shell/core/command_executor.rs`에서 명령어 실행 전, 해당 명령어가 별칭인지 확인하고, 별칭이라면 실제 명령어로 치환하는 로직 추가.

## 2. 환경 변수 기능 (`export`)

- [ ] **`ShellCore` 수정**: `src/shell/core/mod.rs`의 `ShellCore` 구조체에 환경 변수를 저장할 `HashMap<String, String>` 필드 추가.
- [ ] **내장 명령어 구현**: `src/shell/core/builtins/export.rs` 파일을 생성하여 `export` 명령어 로직 구현.
    - `export KEY=value` 형식으로 환경 변수 설정
    - `export`만 입력 시 모든 설정된 환경 변수 목록 출력
- [ ] **내장 명령어 등록**: `src/shell/core/builtins/mod.rs`에 `export` 모듈 등록.
- [ ] **실행 로직 수정**: `src/shell/core/command_executor.rs`의 외부 명령어 실행 부분에서, `Command`에 `.envs()`를 사용하여 `ShellCore`에 저장된 환경 변수들을 자식 프로세스에 전달.

## 3. 명령어 중단 기능 (`Ctrl+C`)

- [ ] **취소 기능 추가**: `tokio-util` 크레이트를 의존성에 추가하고, `CancellationToken`을 사용하여 명령어 취소를 관리.
- [ ] **`ShellTab` 수정**: `src/gui/tab.rs`의 `ShellTab`에 `CancellationToken`을 추가하고, 명령어 실행 시 새로운 토큰을 생성하여 비동기 작업에 전달.
- [ ] **UI 이벤트 처리**: `src/gui/tab.rs`의 UI 처리 부분에서 `Ctrl+C` 키 입력을 감지하고, 감지 시 현재 실행 중인 작업의 `CancellationToken`을 취소.
- [ ] **실행 로직 수정**: `src/shell/core/command_executor.rs`의 `execute_pipeline_async` 함수가 `CancellationToken`을 인자로 받도록 수정.
- [ ] **프로세스 종료**: 외부 명령어 실행 시, `tokio::select!`를 사용하여 명령어의 완료와 취소 토큰의 발동을 동시에 기다림. 취소 시, `child.kill().await`를 호출하여 자식 프로세스를 강제 종료.
